# .travis.yml

# Building, testing and deployment on OS X and Linux

# Reference: https://docs.travis-ci.com/user/customizing-the-build

language: cpp
sudo: required

env:
  - PY_VERSION="3.7.3" PYOTHERSIDE_VERSION="1.5.3"

os:
  - osx
  - linux

# High sierra
osx_image: xcode10.2

services:
  - docker

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then
      brew update
      wget https://github.com/thp/pyotherside/archive/$PYOTHERSIDE_VERSION.tar.gz -P ./lib
      cd lib
      tar -xzvf $PYOTHERSIDE_VERSION.tar.gz
      # Patch PyOtherSide to not be built with debug output
      echo "DEFINES += QT_NO_DEBUG_OUTPUT" >> pyotherside-$PYOTHERSIDE_VERSION/src/src.pro
      cd ..
    fi

install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then
      git clone https://github.com/aurelien-rainone/macdeployqtfix.git
      brew install swig ykpers libyubikey libusb python openssl
      brew install qt
      brew upgrade qt
      brew link qt -f
      # Build Python 3 with --enable-framework, to be able to distribute it in a .app bundle
      brew upgrade pyenv
      eval "$(pyenv init -)"
      env PYTHON_CONFIGURE_OPTS="--enable-framework CC=clang" CFLAGS="-I$(xcrun --show-sdk-path)/usr/include" pyenv install $PY_VERSION
      pyenv global system $PY_VERSION
      # Build and install PyOtherside
      cd lib/pyotherside-$PYOTHERSIDE_VERSION
      qmake
      make
      sudo make install
      cd ../..
      sudo pip3 install --upgrade pip
      sudo pip3 install pre-commit flake8
    fi

before_script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then
        pre-commit run --all-files
    fi

script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    then
      docker build -t xenial-deb -f docker/xenial-deb/Dockerfile .
      docker build -t xenial-appimage -f docker/xenial-appimage/Dockerfile .
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then
      qmake
      make
    fi

after_success:
  - mkdir deploy/
  # Extract all user facing strings and create a textfile with them for deployment.
  - lupdate yubioath-desktop.pro -ts yubioath-desktop.ts
  - cp yubioath-desktop.ts deploy/yubioath-desktop-$TRAVIS_BRANCH-strings.xml
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then
      macdeployqt yubioath-desktop.app/ -qmldir=qml/ -verbose=2
      # Copy needed dylibs
      find /usr/local/Cellar/json-c/ -name '*.dylib' -exec cp '{}' yubioath-desktop.app/Contents/Frameworks/ ';'
      find /usr/local/Cellar/ykpers/ -name '*.dylib' -exec cp '{}' yubioath-desktop.app/Contents/Frameworks/ ';'
      find /usr/local/Cellar/libyubikey/ -name '*.dylib' -exec cp '{}' yubioath-desktop.app/Contents/Frameworks/ ';'
      find /usr/local/Cellar/libusb/ -name '*.dylib' -exec cp '{}' yubioath-desktop.app/Contents/Frameworks/ ';'
      find /usr/local/Cellar/openssl/ -name '*.dylib' -exec cp '{}' yubioath-desktop.app/Contents/Frameworks/ ';'
      # Copy Python framework
      cp -a ~/.pyenv/versions/$PY_VERSION/Python.framework yubioath-desktop.app/Contents/Frameworks/
      sudo find yubioath-desktop.app/Contents/Frameworks/Python.framework -name '*.pyc' -delete
      sudo find yubioath-desktop.app/Contents/Frameworks/Python.framework -name '__pycache__' -delete
      # Move pymodules from app bundle to site-packages, to be accepted by codesign
      mv yubioath-desktop.app/Contents/MacOS/pymodules/* yubioath-desktop.app/Contents/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/
      rm -rf yubioath-desktop.app/Contents/MacOS/pymodules
      # Fix linking for PyOtherSide
      # otool -L yubioath-desktop.app/Contents/PlugIns/quick/libpyothersideplugin.dylib
      sudo install_name_tool -change /usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/Python @executable_path/../Frameworks/Python.framework/Versions/3.7/Python yubioath-desktop.app/Contents/PlugIns/quick/libpyothersideplugin.dylib

      # Fix stuff that macdeployqt does incorrectly.
      sudo python macdeployqtfix/macdeployqtfix.py yubioath-desktop.app/Contents/MacOS/yubioath-desktop /usr/local

      # Fix linking for Python _ssl
      otool -L yubioath-desktop.app/Contents/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_ssl.cpython-37m-darwin.so
      sudo install_name_tool -change /usr/local/opt/openssl@1.1/lib/libcrypto.1.1.dylib @executable_path/../Frameworks/libcrypto.1.0.0.dylib yubioath-desktop.app/Contents/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_ssl.cpython-37m-darwin.so
      sudo install_name_tool -change /usr/local/opt/openssl@1.1/lib/libssl.1.1.dylib @executable_path/../Frameworks/libssl.1.0.0.dylib yubioath-desktop.app/Contents/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_ssl.cpython-37m-darwin.so
      # Fix linking for Python _hashlib
      sudo install_name_tool -change /usr/local/opt/openssl@1.1/lib/libcrypto.1.1.dylib @executable_path/../Frameworks/libcrypto.1.0.0.dylib yubioath-desktop.app/Contents/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_hashlib.cpython-37m-darwin.so
      sudo install_name_tool -change /usr/local/opt/openssl@1.1/lib/libssl.1.1.dylib @executable_path/../Frameworks/libssl.1.0.0.dylib yubioath-desktop.app/Contents/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_hashlib.cpython-37m-darwin.so

      # Rename app bundle
      mv yubioath-desktop.app Yubico\ Authenticator.app
      # Copy .app to deploy dir
      tar -czf yubioath-desktop-$TRAVIS_BRANCH.app.tar.gz Yubico\ Authenticator.app
      mv yubioath-desktop-$TRAVIS_BRANCH.app.tar.gz deploy
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    then
      id=$(docker create xenial-deb)
      docker start --attach $id
      docker cp $id:/yubioath-desktop-debian-packages.tar.gz deploy/yubioath-desktop-$TRAVIS_BRANCH-deb.tar.gz
      id=$(docker create --privileged xenial-appimage)
      docker start --attach $id
      docker cp $id:/yubioath-desktop/Yubico_Authenticator-x86_64.AppImage deploy/yubioath-desktop-$TRAVIS_BRANCH.AppImage
    fi

deploy:
  provider: s3
  access_key_id: "$AWS_KEY_ID"
  secret_access_key: "$AWS_SECRET_KEY"
  bucket: "$AWS_BUCKET"
  skip_cleanup: true
  acl: public-read
  region: eu-west-1
  local-dir: "deploy/"
  upload-dir: "yubioath-desktop"
  on:
    all_branches: true
